/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

eval("function AutocompleteDirectionsHandler(map) {\n    this.map = map;\n    this.originPlaceId = null;\n    this.destinationPlaceId = null;\n    this.travelMode = 'WALKING';\n    var originInput = document.getElementById('origin-input');\n    var destinationInput = document.getElementById('destination-input');\n    var modeSelector = document.getElementById('mode-selector');\n    this.directionsService = new google.maps.DirectionsService();\n    this.directionsDisplay = new google.maps.DirectionsRenderer();\n    this.directionsDisplay.setMap(map);\n\n    var originAutocomplete = new google.maps.places.Autocomplete(originInput, { placeIdOnly: true });\n    var destinationAutocomplete = new google.maps.places.Autocomplete(destinationInput, { placeIdOnly: true });\n\n    this.setupClickListener('changemode-walking', 'WALKING');\n    this.setupClickListener('changemode-transit', 'TRANSIT');\n    this.setupClickListener('changemode-driving', 'DRIVING');\n\n    this.setupPlaceChangedListener(originAutocomplete, 'ORIG');\n    this.setupPlaceChangedListener(destinationAutocomplete, 'DEST');\n\n    this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(originInput);\n    this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(destinationInput);\n    this.map.controls[google.maps.ControlPosition.TOP_LEFT].push(modeSelector);\n}\n\n// Sets a listener on a radio button to change the filter type on Places\n// Autocomplete.\nAutocompleteDirectionsHandler.prototype.setupClickListener = function (id, mode) {\n    var radioButton = document.getElementById(id);\n    var me = this;\n    radioButton.addEventListener('click', function () {\n        me.travelMode = mode;\n        me.route();\n    });\n};\n\nAutocompleteDirectionsHandler.prototype.setupPlaceChangedListener = function (autocomplete, mode) {\n    var me = this;\n    autocomplete.bindTo('bounds', this.map);\n    autocomplete.addListener('place_changed', function () {\n        var place = autocomplete.getPlace();\n        if (!place.place_id) {\n            window.alert(\"Please select an option from the dropdown list.\");\n            return;\n        }\n        if (mode === 'ORIG') {\n            me.originPlaceId = place.place_id;\n        } else {\n            me.destinationPlaceId = place.place_id;\n        }\n        me.route();\n    });\n};\n\nAutocompleteDirectionsHandler.prototype.route = function () {\n    if (!this.originPlaceId || !this.destinationPlaceId) {\n        return;\n    }\n    var me = this;\n\n    this.directionsService.route({\n        origin: { 'placeId': this.originPlaceId },\n        destination: { 'placeId': this.destinationPlaceId },\n        travelMode: this.travelMode\n    }, function (response, status) {\n        if (status === 'OK') {\n            debugger;\n            me.directionsDisplay.setDirections(response);\n            var streetviews = document.getElementById(\"streetviews\");\n            response.routes.forEach(function (route) {\n                route.legs.forEach(function (leg) {\n                    leg.steps.forEach(function (step, index) {\n                        if (index >= 0) {\n                            var pos = {\n                                lat: step.start_location.lat(),\n                                lng: step.start_location.lng()\n                            };\n\n                            var newPanoElement = document.createElement(\"div\");\n                            newPanoElement.id = \"pano\" + pos.lat + pos.lng;\n                            newPanoElement.setAttribute(\"class\", \"map\");\n                            streetviews.appendChild(newPanoElement);\n\n                            var newPanorama = new google.maps.StreetViewPanorama(newPanoElement, {\n                                position: pos,\n                                pov: {\n                                    heading: 34,\n                                    pitch: 10,\n                                    zoom: 1\n                                }\n                            });\n                        }\n                    });\n                });\n            });\n        } else {\n            window.alert('Directions request failed due to ' + status);\n        }\n    });\n};\n\nmodule.exports = AutocompleteDirectionsHandler;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 1 */
/***/ (function(module, exports) {

eval("function Decoder(options) {\n    var me = this;\n    if (!options) {\n        options = {};\n    }\n\n    me.url = options.url;\n\n    if (!me.url) {\n        throw \"decoder needs a url\";\n    }\n}\n\nmodule.exports = Decoder;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zY3JpcHRzL0RlY29kZXIuanM/MTQ0YyJdLCJuYW1lcyI6WyJEZWNvZGVyIiwib3B0aW9ucyIsIm1lIiwidXJsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsU0FBU0EsT0FBVCxDQUFpQkMsT0FBakIsRUFBMEI7QUFDdEIsUUFBSUMsS0FBSyxJQUFUO0FBQ0EsUUFBRyxDQUFDRCxPQUFKLEVBQWE7QUFDWEEsa0JBQVUsRUFBVjtBQUNEOztBQUVEQyxPQUFHQyxHQUFILEdBQVNGLFFBQVFFLEdBQWpCOztBQUVBLFFBQUcsQ0FBQ0QsR0FBR0MsR0FBUCxFQUFZO0FBQ1YsY0FBTSxxQkFBTjtBQUNEO0FBR0o7O0FBRURDLE9BQU9DLE9BQVAsR0FBaUJMLE9BQWpCIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBEZWNvZGVyKG9wdGlvbnMpIHtcclxuICAgIHZhciBtZSA9IHRoaXM7XHJcbiAgICBpZighb3B0aW9ucykge1xyXG4gICAgICBvcHRpb25zID0ge307XHJcbiAgICB9XHJcblxyXG4gICAgbWUudXJsID0gb3B0aW9ucy51cmw7XHJcblxyXG4gICAgaWYoIW1lLnVybCkge1xyXG4gICAgICB0aHJvdyBcImRlY29kZXIgbmVlZHMgYSB1cmxcIjtcclxuICAgIH1cclxuICAgIFxyXG5cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBEZWNvZGVyO1xuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL3NjcmlwdHMvRGVjb2Rlci5qcyJdLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

eval("function initMap() {\n    map = new google.maps.Map(document.getElementById('map'), {\n        center: { lat: 49.277433, lng: -123.116371 },\n        zoom: 15\n    });\n}\n\nvar Decoder = __webpack_require__(1);\nvar AutoComplete = __webpack_require__(0);\nvar me = this;\nvar map;\ninitMap();\nme._autoCompleter = new AutoComplete(map);\n\n// var url = \"https://www.google.ca/maps/dir/928+Beatty+St,+Vancouver,+BC+V6Z+3G6,+Canada/chairlines/@49.270355,-123.1315508,14z/data=!4m14!4m13!1m5!1m1!1s0x5486717d7b78e701:0xc1bc02486803d017!2m2!1d-123.1156299!2d49.2758282!1m5!1m1!1s0x548671601483d7d9:0xf4bc0201986a9b44!2m2!1d-123.1100155!2d49.2646612!3e2\"\n// me._decoder = new Decoder({url: url});//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAuanM/ZDhlZSJdLCJuYW1lcyI6WyJpbml0TWFwIiwibWFwIiwiZ29vZ2xlIiwibWFwcyIsIk1hcCIsImRvY3VtZW50IiwiZ2V0RWxlbWVudEJ5SWQiLCJjZW50ZXIiLCJsYXQiLCJsbmciLCJ6b29tIiwiRGVjb2RlciIsInJlcXVpcmUiLCJBdXRvQ29tcGxldGUiLCJtZSIsIl9hdXRvQ29tcGxldGVyIl0sIm1hcHBpbmdzIjoiQUFBQSxTQUFTQSxPQUFULEdBQW1CO0FBQ2ZDLFVBQU0sSUFBSUMsT0FBT0MsSUFBUCxDQUFZQyxHQUFoQixDQUFvQkMsU0FBU0MsY0FBVCxDQUF3QixLQUF4QixDQUFwQixFQUFvRDtBQUN0REMsZ0JBQVEsRUFBQ0MsS0FBSyxTQUFOLEVBQWlCQyxLQUFLLENBQUMsVUFBdkIsRUFEOEM7QUFFdERDLGNBQU07QUFGZ0QsS0FBcEQsQ0FBTjtBQUlIOztBQUdELElBQUlDLFVBQVUsbUJBQUFDLENBQVEsQ0FBUixDQUFkO0FBQ0EsSUFBSUMsZUFBZSxtQkFBQUQsQ0FBUSxDQUFSLENBQW5CO0FBQ0EsSUFBSUUsS0FBSyxJQUFUO0FBQ0EsSUFBSWIsR0FBSjtBQUNBRDtBQUNBYyxHQUFHQyxjQUFILEdBQW9CLElBQUlGLFlBQUosQ0FBaUJaLEdBQWpCLENBQXBCOztBQUdBO0FBQ0EiLCJmaWxlIjoiMi5qcyIsInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIGluaXRNYXAoKSB7XHJcbiAgICBtYXAgPSBuZXcgZ29vZ2xlLm1hcHMuTWFwKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtYXAnKSwge1xyXG4gICAgICAgIGNlbnRlcjoge2xhdDogNDkuMjc3NDMzLCBsbmc6IC0xMjMuMTE2MzcxfSxcclxuICAgICAgICB6b29tOiAxNVxyXG4gICAgfSk7XHJcbn1cclxuXHJcblxyXG52YXIgRGVjb2RlciA9IHJlcXVpcmUoXCIuL3NjcmlwdHMvRGVjb2Rlci5qc1wiKTtcclxudmFyIEF1dG9Db21wbGV0ZSA9IHJlcXVpcmUoXCIuL3NjcmlwdHMvQXV0b0NvbXBsZXRlLmpzXCIpO1xyXG52YXIgbWUgPSB0aGlzO1xyXG52YXIgbWFwO1xyXG5pbml0TWFwKCk7XHJcbm1lLl9hdXRvQ29tcGxldGVyID0gbmV3IEF1dG9Db21wbGV0ZShtYXApO1xyXG5cclxuXHJcbi8vIHZhciB1cmwgPSBcImh0dHBzOi8vd3d3Lmdvb2dsZS5jYS9tYXBzL2Rpci85MjgrQmVhdHR5K1N0LCtWYW5jb3V2ZXIsK0JDK1Y2WiszRzYsK0NhbmFkYS9jaGFpcmxpbmVzL0A0OS4yNzAzNTUsLTEyMy4xMzE1NTA4LDE0ei9kYXRhPSE0bTE0ITRtMTMhMW01ITFtMSExczB4NTQ4NjcxN2Q3Yjc4ZTcwMToweGMxYmMwMjQ4NjgwM2QwMTchMm0yITFkLTEyMy4xMTU2Mjk5ITJkNDkuMjc1ODI4MiExbTUhMW0xITFzMHg1NDg2NzE2MDE0ODNkN2Q5OjB4ZjRiYzAyMDE5ODZhOWI0NCEybTIhMWQtMTIzLjExMDAxNTUhMmQ0OS4yNjQ2NjEyITNlMlwiXHJcbi8vIG1lLl9kZWNvZGVyID0gbmV3IERlY29kZXIoe3VybDogdXJsfSk7XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcbiBcblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9hcHAuanMiXSwic291cmNlUm9vdCI6IiJ9");

/***/ })
/******/ ]);